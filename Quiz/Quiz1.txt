Q1:

int[] a = new int[2];
System.out.println(a[0]);

1. a
2. 0
3. 1
4. null

ANS: 2

int 배열을 선언하고 값을 넣어주지 않았죠. 이런 경우 해당 자료형의 기본 값이 사용됩니다. int의 기본값은 0이기 때문에 0이 출력됩니다.

-----------------------------------------------------------------------------------------------------------------------

Q2:
Person[] people = new Person[2];
System.out.println(people[0]);

1. people
2. 0
3. ""
4. null

ANS: 4

Person은 클래스이기 때문에 people[0]은 참조형(Reference Type)입니다. 참조형의 기본 값은 null입니다.

-----------------------------------------------------------------------------------------------------------------------

Q3:

Person person = new Person();
people[0] = person;
person.age = a[0];
a[0] = 26;
System.out.println(person.age);

1. 0
2. 1
3. 26
4. null

ANS: 1

person.age와 a[0]은 기본 자료형 int입니다. 따라서 a[0]의 값이 person.age에 복사되는 것이죠. 그 후에 a[0] = 26;을 하여도 person.

age에는 그 전에 복사된 값 0이 남아 있습니다.

-----------------------------------------------------------------------------------------------------------------------

Q4:

a[0]++;
people[1] = people[0];
people[1].age = a[0];
a[0] = 28;
System.out.println(people[0].age);

1. 0
2. 26
3. 27
4. 28

ANS: 3

3번 문제에서 a[0]은 26으로 저장되었고, 4번 문제의 첫 줄 a[0]++;에서 a[0]은 27이 되죠.

또한 Person은 참조형이기 때문에 두 번째 줄에 의해 people[0]과 people[1]은 동일한 인스턴스를 가리킵니다.

세 번째 줄에서 people[1].age = a[0]; 수행 시, 3번 문제에서와 동일하게 people[1].age에 27이 복사됩니다.

이후 a[0]을 28로 바꾸어 주어도 people[0].age의 값은 이전에 복사된 27이 남아있습니다. 따라서 people[0].age를 출력하면 27이 나옵니다.